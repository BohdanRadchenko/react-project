{"version":3,"sources":["components/authRedirectHoc/authRedirectHoc.js","components/Authentication/SignIn.js","pages/SignInPage.js"],"names":["authRedirect","BaseComponent","WithAuthRedirect","_Component","Object","D_GitHub_Repositories_react_project_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_GitHub_Repositories_react_project_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_GitHub_Repositories_react_project_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_GitHub_Repositories_react_project_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_GitHub_Repositories_react_project_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","authentificated","history","replace","_this$props2","location","state","from","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Component","connect","isAuthentificated","SignIn","handleEnterSubmit","_ref","code","_this","handleSubmit","document","body","addEventListener","removeEventListener","errorMessage","values","handleBlur","handleChange","errors","touched","react_default","onSubmit","style","display","margin","width","flexDirection","type","name","email","onChange","onBlur","placeholder","className","password","defaultProps","getError","mDTP","onSignIn","signIn","authRedirectHoc","formik_esm","initialValues","_ref2","setSubmitting","setTimeout","validationSchema","Yup","shape","required","min","max","Authentication_SignIn","assign","react_router_dom","to"],"mappings":"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","file":"static/js/signIn-page.280d68b0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { isAuthentificated } from '../../redux/session/sessionSelectors';\n\nconst authRedirect = BaseComponent => {\n  class WithAuthRedirect extends Component {\n    static propTypes = {\n      authentificated: PropTypes.bool.isRequired,\n      history: ReactRouterPropTypes.history.isRequired,\n      location: ReactRouterPropTypes.location.isRequired,\n    };\n\n    componentDidMount() {\n      const { authentificated, history } = this.props;\n      if (!authentificated) return;\n\n      history.replace('/');\n    }\n\n    componentDidUpdate() {\n      const { authentificated, location, history } = this.props;\n      if (!authentificated) return;\n      if (location.state && location.state.from) {\n        history.replace(location.state.from);\n      }\n\n      history.replace('/');\n    }\n\n    render() {\n      return <BaseComponent {...this.props} />;\n    }\n  }\n\n  const mSTP = state => ({ authentificated: isAuthentificated(state) });\n\n  return connect(mSTP)(WithAuthRedirect);\n};\n\nexport default authRedirect;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import { Redirect } from 'react-router-dom';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport {\n  getError,\n  isAuthentificated,\n} from '../../redux/session/sessionSelectors';\n\nclass SignIn extends Component {\n  static defaultProps = {\n    errorMessage: '',\n  };\n\n  static propTypes = {\n    handleBlur: PropTypes.func.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    errorMessage: PropTypes.string,\n    values: PropTypes.objectOf(PropTypes.string).isRequired,\n    errors: PropTypes.objectOf(PropTypes.string).isRequired,\n    touched: PropTypes.objectOf(PropTypes.any).isRequired,\n    history: ReactRouterPropTypes.history.isRequired,\n    authentificated: PropTypes.bool.isRequired,\n  };\n\n  componentDidMount() {\n    document.body.addEventListener('keydown', this.handleEnterSubmit);\n  }\n\n  componentDidUpdate() {\n    const { authentificated, history } = this.props;\n    if (authentificated) {\n      history.replace('/dashboard');\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener('keydown', this.handleEnterSubmit);\n  }\n\n  handleEnterSubmit = ({ code }) =>\n    code === 'Enter' || code === 'NumpadEnter'\n      ? this.props.handleSubmit()\n      : null;\n\n  render() {\n    const {\n      errorMessage,\n      values,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      errors,\n      touched,\n    } = this.props;\n\n    return (\n      <form\n        onSubmit={handleSubmit}\n        style={{\n          display: 'flex',\n          margin: 'auto',\n          width: 500,\n          flexDirection: 'column',\n        }}\n      >\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={values.email}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          placeholder=\"email\"\n        />\n        {errors.email && touched.email && (\n          <div className=\"input-feedback\">{errors.email}</div>\n        )}\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={values.password}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          placeholder=\"password\"\n        />\n        {errors.password && touched.password && (\n          <div className=\"input-feedback\">{errors.password}</div>\n        )}\n        <button type=\"submit\">Sign in</button>\n        <p>{errorMessage}</p>\n      </form>\n    );\n  }\n}\n\nconst mSTP = state => ({\n  errorMessage: getError(state),\n  authentificated: isAuthentificated(state),\n});\n\nexport default connect(mSTP)(SignIn);\n","import React from 'react';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport SignIn from '../components/Authentication/SignIn';\nimport { signIn } from '../redux/session/sessionOperations';\nimport authRedirectHoc from '../components/authRedirectHoc/authRedirectHoc';\n\nconst SignInPage = ({ onSignIn, history }) => (\n  <div>\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          const { email, password, name } = values;\n          onSignIn({ email, password, name });\n          setSubmitting(false);\n        }, 100);\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required('Email is required'),\n        password: Yup.string()\n          .min(4)\n          .max(16)\n          .required('Password is required'),\n      })}\n    >\n      {props => <SignIn {...props} history={history} />}\n    </Formik>\n    <Link to=\"/signup\">\n      <p>Registration</p>\n    </Link>\n  </div>\n);\n\nSignInPage.propTypes = {\n  onSignIn: PropTypes.func.isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n};\n\nconst mDTP = {\n  onSignIn: signIn,\n};\n\nexport default connect(\n  null,\n  mDTP,\n)(authRedirectHoc(SignInPage));\n"],"sourceRoot":""}