{"version":3,"sources":["components/Stats/Stats.module.css","components/Stats/StatsDiagram/StatsDiagram.js","components/Stats/StatsTable/StatsTable.js","components/Stats/StatsSelect/StatsSelect.js","components/Stats/Options/OptionsMonth.js","components/Stats/Options/OptionsYear.js","helpers/filterItems.js","pages/Stats.js"],"names":["module","exports","container","title","statsSelectContainer","innerSelectMonth","innerSelectYear","innerDiagramContainer","innerDiagram","total","costs","costsTotal","flexContainer","innerStatsContainer","options","plugins","labels","render","position","overlap","fontSize","maintainAspectRatio","responsive","legend","display","boxWidth","Chart","props","react_default","a","createElement","react_chartjs_2_es","data","items","DiagramTable","Fragment","react_table_es","key","length","reverse","columns","Header","accessor","defaultPageSize","showPagination","filtered","onClick","defaultProps","App","state","selectedOption","value","label","_this","handleChange","setState","handleSelect","this","react_select_browser_esm","blurInputOnSelect","onChange","Component","OptionsMonth","OptionsYear","filterItems","year","month","filter","el","split","Stats","balance","deposits","withdrow","search","costsFilter","chart","datasets","backgroundColor","colorSwitch","getSelectMonth","Object","assign","getSelectYears","_this2","transactions","filteredCost","type","map","category","concat","amount","reducedCategory","reduce","result","num","colorAuto","toConsumableArray","statisticsCount","prevProps","prevState","statsTableLines","document","getElementsByClassName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","insertAdjacentHTML","children","textContent","err","return","_this$state","className","styles","innerTitle","StatsDiagram","StatsSelect_App","OptionsYears","innerTable","StatsTable_StatsTable","containerText","income","containerAmount","Intl","NumberFormat","style","currency","format","incomeTotal","connect","finance"],"mappings":"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","file":"static/js/stats-page.1d1a6102.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Stats_container__3gV-k\",\"title\":\"Stats_title__iRcx8\",\"statsSelectContainer\":\"Stats_statsSelectContainer__1iADt\",\"innerSelectMonth\":\"Stats_innerSelectMonth__nfvcH\",\"innerSelectYear\":\"Stats_innerSelectYear__2E9gB\",\"innerDiagramContainer\":\"Stats_innerDiagramContainer__3U23n\",\"innerDiagram\":\"Stats_innerDiagram__1nPPV\",\"total\":\"Stats_total__3s_1q\",\"costs\":\"Stats_costs__K1oUI\",\"costsTotal\":\"Stats_costsTotal__-UZuD\",\"flexContainer\":\"Stats_flexContainer__3vB4m\",\"innerStatsContainer\":\"Stats_innerStatsContainer__2kZkf\"};","/* eslint-disable */\nimport React from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport 'chartjs-plugin-labels';\n\nconst options = {\n  plugins: {\n    labels: [\n      {\n        render: 'percent',\n        position: 'outside',\n        overlap: true,\n        fontSize: 10,\n      },\n    ],\n  },\n  maintainAspectRatio: false,\n  responsive: true,\n  legend: {\n    position: 'bottom',\n    display: true,\n    labels: {\n      boxWidth: 12,\n    },\n  },\n};\n\nconst Chart = props => <Pie data={props.items} options={options} />;\nexport default Chart;\n","/* eslint-disable */\nimport React from 'react';\nimport ReactTable from 'react-table';\nimport PropTypes from 'prop-types';\nimport './StatsTable.css';\n\nconst DiagramTable = props => {\n  const { items } = props;\n  return (\n    <>\n      <ReactTable\n        key={items.length}\n        data={items.reverse()}\n        columns={[\n          {\n            Header: 'Category',\n            accessor: 'category',\n          },\n          {\n            Header: 'Amount',\n            accessor: 'amount',\n          },\n        ]}\n        defaultPageSize={items.length}\n        showPagination={false}\n        filtered={[]}\n        onClick={() => null}\n      />\n    </>\n  );\n};\n\nexport default DiagramTable;\n\nDiagramTable.defaultProps = {\n  items: [],\n};\nDiagramTable.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      category: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","/*eslint-disable*/\nimport React, { Component } from 'react';\nimport Select from 'react-select';\n\nexport default class App extends Component {\n  state = {\n    selectedOption: { value: ' ', label: this.props.label },\n  };\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    this.props.handleSelect(selectedOption);\n  };\n\n  render() {\n    const { selectedOption } = this.state;\n    const { options } = this.props;\n    return (\n      <Select\n        blurInputOnSelect\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n    );\n  }\n}\n","const OptionsMonth = [\n  { value: '01', label: 'january' },\n  { value: '02', label: 'february' },\n  { value: '03', label: 'march' },\n  { value: '04', label: 'aprile' },\n  { value: '05', label: 'may' },\n  { value: '06', label: 'june' },\n  { value: '07', label: 'july' },\n  { value: '08', label: 'august' },\n  { value: '09', label: 'september' },\n  { value: '10', label: 'octouber' },\n  { value: '11', label: 'november' },\n  { value: '12', label: 'december' },\n];\n\nexport default OptionsMonth;\n","const OptionsYear = [\n  { value: '1999', label: '1999' },\n  { value: '2000', label: '2000' },\n  { value: '2001', label: '2001' },\n  { value: '2002', label: '2002' },\n  { value: '2003', label: '2003' },\n  { value: '2004', label: '2004' },\n  { value: '2005', label: '2005' },\n  { value: '2006', label: '2006' },\n  { value: '2007', label: '2007' },\n  { value: '2008', label: '2008' },\n  { value: '2009', label: '2009' },\n  { value: '2010', label: '2010' },\n  { value: '2011', label: '2011' },\n  { value: '2012', label: '2012' },\n  { value: '2013', label: '2013' },\n  { value: '2014', label: '2014' },\n  { value: '2015', label: '2015' },\n  { value: '2016', label: '2016' },\n  { value: '2017', label: '2017' },\n  { value: '2018', label: '2018' },\n  { value: '2019', label: '2019' },\n];\n\nexport default OptionsYear;\n","/*eslint-disable*/\nconst filterItems = (items, year, month) => {\n  if (items.length !== 0) {\n    if (month && year) {\n      const filtred = items.filter(\n        el => el.data.split('-')[0] === year && el.data.split('-')[1] === month,\n      );\n      return filtred;\n    }\n  }\n};\n\nexport default filterItems;\n","/*eslint-disable*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport StatsDiagram from '../components/Stats/StatsDiagram/StatsDiagram';\nimport StatsTable from '../components/Stats/StatsTable/StatsTable';\nimport StatsSelect from '../components/Stats/StatsSelect/StatsSelect';\nimport db from '../db.json';\nimport OptionsMonth from '../components/Stats/Options/OptionsMonth';\nimport OptionsYears from '../components/Stats/Options/OptionsYear';\nimport statisticsCount from '../helpers/statisticsCount';\nimport filterItems from '../helpers/filterItems';\nimport styles from '../components/Stats/Stats.module.css';\n\nclass Stats extends Component {\n  state = {\n    items: [],\n    balance: 0,\n    deposits: 0,\n    withdrow: 0,\n    search: {\n      month: null,\n      year: null,\n    },\n    costsFilter: [],\n    chart: {\n      labels: [],\n      datasets: [\n        {\n          data: [],\n          backgroundColor: [],\n        },\n      ],\n    },\n  };\n\n  colorSwitch = value => {\n    switch (value) {\n      case 'Category':\n        return 'transparent';\n      case 'Main Expenses':\n        return '#ECB22A';\n      case 'Food':\n        return '#E28B20';\n      case 'Car':\n        return '#D25925';\n      case 'Self Care':\n        return '#67B7D0';\n      case 'Child Care':\n        return '#5593D7';\n      case 'House':\n        return '#3E6BA8';\n      case 'Education':\n        return '#9CC254';\n      case 'Enterteinment':\n        return '#73AD57';\n      case 'Others':\n        return '#507C3A';\n    }\n  };\n\n  componentDidMount() {\n    const transactions = this.props.transactions;\n    const filteredCost = transactions\n      .filter(el => el.type === '-')\n      .map(el => ({\n        category: `${el.category}`,\n        amount: el.amount,\n      }));\n    const reducedCategory = value =>\n      filteredCost\n        .filter(el => el.category === value)\n        .map(el => el.amount)\n        .reduce(function(result, num) {\n          return result + num;\n        }, 0);\n    const colorAuto = value => this.colorSwitch(value);\n    const labels = value => {\n      if (filteredCost.map(el => el.category === value)) {\n        return value;\n      } else {\n        ('');\n      }\n    };\n\n    this.setState({\n      items: [...this.props.transactions],\n      balance: statisticsCount(transactions).balance,\n      deposits: statisticsCount(transactions).deposits,\n      withdrow: statisticsCount(transactions).withdrow,\n      costsFilter: [...filteredCost],\n      chart: {\n        labels: [\n          labels('Main Expenses'),\n          labels('Food'),\n          labels('Car'),\n          labels('Self Care'),\n          labels('Child Care'),\n          labels('House'),\n          labels('Education'),\n          labels('Enterteinment'),\n          labels('Others'),\n        ],\n\n        datasets: [\n          {\n            data: [\n              reducedCategory('Main Expenses'),\n              reducedCategory('Food'),\n              reducedCategory('Car'),\n              reducedCategory('Self Care'),\n              reducedCategory('Child Care'),\n              reducedCategory('House'),\n              reducedCategory('Education'),\n              reducedCategory('Enterteinment'),\n              reducedCategory('Others'),\n            ],\n            backgroundColor: [\n              colorAuto('Main Expenses'),\n              colorAuto('Food'),\n              colorAuto('Car'),\n              colorAuto('Self Care'),\n              colorAuto('Child Care'),\n              colorAuto('House'),\n              colorAuto('Education'),\n              colorAuto('Enterteinment'),\n              colorAuto('Others'),\n            ],\n          },\n        ],\n      },\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.costsFilter) {\n      const statsTableLines = document.getElementsByClassName('rt-tr');\n      for (let item of statsTableLines) {\n        item.insertAdjacentHTML(\n          'afterbegin',\n          `<div style=\"background-color: ${this.colorSwitch(\n            item.children[0].textContent,\n          )}\" class=\"two\"></div>`,\n        );\n      }\n    }\n  }\n\n  getSelectMonth = options => {\n    this.setState(state => ({\n      search: Object.assign(state.search, { month: options.value }),\n    }));\n  };\n\n  getSelectYears = options => {\n    this.setState(state => ({\n      search: Object.assign(state.search, { year: options.value }),\n    }));\n  };\n\n  render() {\n    const { search, items, selectedOption } = this.state;\n    const filtredItems = filterItems(items, search.year, search.month);\n    return (\n      <div className={styles.container}>\n        <div className={styles.innerTitle}>\n          <h2 className={styles.title}>Statistics</h2>\n        </div>\n        <div className={styles.flexContainer}>\n          <div className={styles.innerDiagramContainer}>\n            <div className={styles.innerDiagram}>\n              <StatsDiagram items={this.state.chart} />\n            </div>\n          </div>\n\n          <div className={styles.innerStatsContainer}>\n            <div className={styles.statsSelectContainer}>\n              <div className={styles.innerSelectMonth}>\n                <StatsSelect\n                  options={OptionsMonth}\n                  handleSelect={this.getSelectMonth}\n                  label={'Month'}\n                />\n              </div>\n              <div className={styles.innerSelectYear}>\n                <StatsSelect\n                  options={OptionsYears}\n                  handleSelect={this.getSelectYears}\n                  label={'Year'}\n                />\n              </div>\n            </div>\n            <div className={styles.innerTable}>\n              <StatsTable items={this.state.costsFilter} />\n            </div>\n            <div className={styles.total}>\n              <div className={styles.containerText}>\n                <p className={styles.costs}>Costs:</p>\n                <p className={styles.income}>Income:</p>\n              </div>\n              <div className={styles.containerAmount}>\n                <p className={styles.costsTotal}>\n                  {new Intl.NumberFormat('ru', {\n                    style: 'currency',\n                    currency: 'USD',\n                  }).format(this.state.withdrow)}\n                </p>\n                <p className={styles.incomeTotal}>\n                  {new Intl.NumberFormat('ru', {\n                    style: 'currency',\n                    currency: 'USD',\n                  }).format(this.state.deposits)}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  // transactions: db,\n  transactions: state.finance.data,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Stats);\n"],"sourceRoot":""}