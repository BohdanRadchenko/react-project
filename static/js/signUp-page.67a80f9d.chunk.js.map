{"version":3,"sources":["components/authRedirectHoc/authRedirectHoc.js","components/PasswordStrengthMeter/PasswordStrengthMeter.js","components/Authentication/SignUp.js","pages/SignUpPage.js"],"names":["authRedirect","BaseComponent","WithAuthRedirect","_Component","Object","D_github_react_project_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_github_react_project_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_github_react_project_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_github_react_project_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_github_react_project_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","authentificated","history","replace","_this$props2","location","state","from","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Component","connect","isAuthentificated","createPasswordLabel","result","score","PasswordStrengthMeter","_ref","password","testedResult","zxcvbn","react_default","className","max","concat","defaultProps","SignUp","handleEnterSubmit","code","_this","handleSubmit","document","body","addEventListener","removeEventListener","errorMessage","values","handleBlur","handleChange","errors","touched","onSubmit","style","display","flexDirection","padding","width","margin","type","name","email","onChange","onBlur","placeholder","components_PasswordStrengthMeter_PasswordStrengthMeter","passwordConfirm","getError","mDTP","onSignUp","signUp","authRedirectHoc","formik_esm","initialValues","_ref2","setSubmitting","setTimeout","validationSchema","Yup","shape","required","min","oneOf","Authentication_SignUp","react_router_dom","to"],"mappings":"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","file":"static/js/signUp-page.67a80f9d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { isAuthentificated } from '../../redux/session/sessionSelectors';\n\nconst authRedirect = BaseComponent => {\n  class WithAuthRedirect extends Component {\n    static propTypes = {\n      authentificated: PropTypes.bool.isRequired,\n      history: ReactRouterPropTypes.history.isRequired,\n      location: ReactRouterPropTypes.location.isRequired,\n    };\n\n    componentDidMount() {\n      const { authentificated, history } = this.props;\n      if (!authentificated) return;\n\n      history.replace('/');\n    }\n\n    componentDidUpdate() {\n      const { authentificated, location, history } = this.props;\n      if (!authentificated) return;\n      if (location.state && location.state.from) {\n        history.replace(location.state.from);\n      }\n\n      history.replace('/');\n    }\n\n    render() {\n      return <BaseComponent {...this.props} />;\n    }\n  }\n\n  const mSTP = state => ({ authentificated: isAuthentificated(state) });\n\n  return connect(mSTP)(WithAuthRedirect);\n};\n\nexport default authRedirect;\n","import React from 'react';\nimport zxcvbn from 'zxcvbn';\nimport PropTypes from 'prop-types';\n\nconst createPasswordLabel = result => {\n  switch (result.score) {\n    case 0:\n      return 'Weak';\n    case 1:\n      return 'Weak';\n    case 2:\n      return 'Good';\n    case 3:\n      return 'Strong';\n    case 4:\n      return 'Very strong!';\n    default:\n      return 'Weak';\n  }\n};\n\nconst PasswordStrengthMeter = ({ password }) => {\n  const testedResult = zxcvbn(password);\n\n  return (\n    <div className=\"password-strength-meter\">\n      <br />\n      <progress\n        value={testedResult.score}\n        max=\"4\"\n        className={`password-strength-meter-progress strength-${createPasswordLabel(\n          testedResult,\n        )}`}\n      />\n    </div>\n  );\n};\n\nPasswordStrengthMeter.defaultProps = {\n  password: '',\n};\n\nPasswordStrengthMeter.propTypes = {\n  password: PropTypes.string,\n};\n\nexport default PasswordStrengthMeter;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getError } from '../../redux/session/sessionSelectors';\nimport './test.css';\nimport PasswordStrengthMeter from '../PasswordStrengthMeter/PasswordStrengthMeter';\n\nclass SignUp extends Component {\n  static defaultProps = {\n    errorMessage: '',\n  };\n\n  static propTypes = {\n    handleBlur: PropTypes.func.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    errorMessage: PropTypes.string,\n    values: PropTypes.objectOf(PropTypes.string).isRequired,\n    errors: PropTypes.objectOf(PropTypes.string).isRequired,\n    touched: PropTypes.objectOf(PropTypes.any).isRequired,\n  };\n\n  componentDidMount() {\n    document.body.addEventListener('keydown', this.handleEnterSubmit);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener('keydown', this.handleEnterSubmit);\n  }\n\n  handleEnterSubmit = ({ code }) =>\n    code === 'Enter' || code === 'NumpadEnter'\n      ? this.props.handleSubmit()\n      : null;\n\n  render() {\n    const { errorMessage } = this.props;\n    const {\n      values,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      errors,\n      touched,\n    } = this.props;\n    return (\n      <form\n        onSubmit={handleSubmit}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 10,\n          width: 500,\n          margin: 'auto',\n        }}\n      >\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={values.email}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          placeholder=\"email*\"\n        />\n        {errors.email && touched.email && (\n          <div className=\"input-feedback\">{errors.email}</div>\n        )}\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={values.password}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          placeholder=\"password*\"\n        />\n        <PasswordStrengthMeter password={values.password} />\n        {errors.password && touched.password && (\n          <div className=\"input-feedback\">{errors.password}</div>\n        )}\n        <input\n          type=\"password\"\n          name=\"passwordConfirm\"\n          value={values.passwordConfirm}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          placeholder=\"confirm password*\"\n        />\n        {errors.passwordConfirm && touched.passwordConfirm && (\n          <div className=\"input-feedback\">{errors.passwordConfirm}</div>\n        )}\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={values.name}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          placeholder=\"name*\"\n        />\n        {errors.name && touched.name && (\n          <div className=\"input-feedback\">{errors.name}</div>\n        )}\n        <button type=\"submit\">Sign up</button>\n        <p>{errorMessage}</p>\n      </form>\n    );\n  }\n}\n\nconst mSTP = state => ({\n  errorMessage: getError(state),\n});\n\nexport default connect(mSTP)(SignUp);\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\n\nimport SignUp from '../components/Authentication/SignUp';\nimport { signUp } from '../redux/session/sessionOperations';\nimport authRedirectHoc from '../components/authRedirectHoc/authRedirectHoc';\n\nconst SignUpPage = ({ onSignUp }) => (\n  <div>\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        passwordConfirm: '',\n        name: '',\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          const { email, password, name } = values;\n          onSignUp({ email, password, name });\n          setSubmitting(false);\n        }, 100);\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required('Email is required'),\n        password: Yup.string()\n          .min(4)\n          .max(16)\n          .required('Password is required'),\n        passwordConfirm: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Please confirm your password'),\n        name: Yup.string().required('Name is required'),\n      })}\n    >\n      {props => <SignUp {...props} />}\n    </Formik>\n    <Link to=\"/signin\">\n      <p>Login</p>\n    </Link>\n  </div>\n);\n\nSignUpPage.propTypes = {\n  onSignUp: PropTypes.func.isRequired,\n};\n\nconst mDTP = {\n  onSignUp: signUp,\n};\n\nexport default connect(\n  null,\n  mDTP,\n)(authRedirectHoc(SignUpPage));\n"],"sourceRoot":""}