{"version":3,"sources":["components/Stats/Stats.module.css","helpers/colorSwitcher.js","components/Stats/StatsDiagram/StatsDiagram.js","components/Stats/StatsTable/StatsTable.js","components/Stats/StatsSelect/StatsSelect.js","components/Stats/Options/OptionsMonth.js","components/Stats/Options/OptionsYear.js","helpers/filterItems.js","pages/Stats.js"],"names":["module","exports","container","title","statsSelectContainer","innerSelectMonth","innerSelectYear","innerDiagramContainer","innerDiagram","total","costs","costsTotal","innerStatsContainer","flexContainer","colorSwitcher","value","options","plugins","labels","render","position","overlap","fontSize","maintainAspectRatio","responsive","legend","display","boxWidth","Chart","props","console","log","filterByWithdraw","items","filter","el","type","map","category","concat","amount","categoryReducer","reduce","result","num","data","chart","datasets","backgroundColor","react_default","a","createElement","react_chartjs_2_es","DiagramTable","filterBy","Object","assign","withdrawTotal","depositsTotal","Fragment","react_table_es","key","length","reverse","columns","Header","accessor","defaultPageSize","showPagination","className","styles","containerText","income","containerAmount","Intl","NumberFormat","style","currency","format","incomeTotal","defaultProps","App","state","selectedOption","label","_this","handleChange","setState","handleSelect","this","react_select_browser_esm","blurInputOnSelect","onChange","Component","OptionsMonth","OptionsYears","filt","Date","date","toLocaleDateString","slice","Array","from","Set","filterItems","year","month","toDateString","includes","Stats","balance","deposits","withdrow","search","test","statsTableLines","document","getElementsByClassName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","insertAdjacentHTML","children","textContent","err","return","getFilteredItems","_this$state","getSelectMonth","getSelectYears","transactions","toConsumableArray","statisticsCount","prevProps","prevState","_this$state2","innerTitle","StatsDiagram","StatsSelect_App","innerTable","StatsTable_StatsTable","connect","finance"],"mappings":"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","file":"static/js/stats-page.ebf6ee2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Stats_container__1qtAH\",\"title\":\"Stats_title__2lySv\",\"statsSelectContainer\":\"Stats_statsSelectContainer__1fTGe\",\"innerSelectMonth\":\"Stats_innerSelectMonth__1-EO3\",\"innerSelectYear\":\"Stats_innerSelectYear__3Ag85\",\"innerDiagramContainer\":\"Stats_innerDiagramContainer__3YEdM\",\"innerDiagram\":\"Stats_innerDiagram__24Ooz\",\"total\":\"Stats_total__ME925\",\"costs\":\"Stats_costs__2YZtb\",\"costsTotal\":\"Stats_costsTotal__3PKJL\",\"innerStatsContainer\":\"Stats_innerStatsContainer__2as06\",\"flexContainer\":\"Stats_flexContainer__2IUdz\"};","/*eslint-disable*/\nconst colorSwitcher = value => {\n  switch (value) {\n    case 'Category':\n      return 'transparent';\n    case 'Main Expenses':\n      return '#ECB22A';\n    case 'Food':\n      return '#E28B20';\n    case 'Car':\n      return '#D25925';\n    case 'Self Care':\n      return '#67B7D0';\n    case 'Child Care':\n      return '#5593D7';\n    case 'House':\n      return '#3E6BA8';\n    case 'Education':\n      return '#9CC254';\n    case 'Enterteinment':\n      return '#73AD57';\n    case 'Others':\n      return '#507C3A';\n  }\n};\n\nexport default colorSwitcher;\n","/* eslint-disable */\nimport React from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport 'chartjs-plugin-labels';\nimport colorSwitcher from '../../../helpers/colorSwitcher';\n\nconst options = {\n  plugins: {\n    labels: [\n      {\n        render: 'percent',\n        position: 'outside',\n        overlap: true,\n        fontSize: 10,\n      },\n    ],\n  },\n  maintainAspectRatio: false,\n  responsive: true,\n  legend: {\n    position: 'bottom',\n    display: true,\n    labels: {\n      boxWidth: 12,\n    },\n  },\n};\n\nconst Chart = props => {\n  console.log();\n\n  const filterByWithdraw = props.items\n    .filter(el => el.type === '-')\n    .map(el => ({\n      category: `${el.category}`,\n      amount: el.amount,\n    }));\n\n  const categoryReducer = value =>\n    filterByWithdraw\n      .filter(el => el.category === value)\n      .map(el => el.amount)\n      .reduce(function(result, num) {\n        return result + num;\n      }, 0);\n\n  const data = {\n    chart: {\n      labels: [\n        'Main Expenses',\n        'Food',\n        'Car',\n        'Self Care',\n        'Child Care',\n        'House',\n        'Education',\n        'Enterteinment',\n        'Others',\n      ],\n      datasets: [\n        {\n          data: [\n            categoryReducer('Main Expenses'),\n            categoryReducer('Food'),\n            categoryReducer('Car'),\n            categoryReducer('Self Care'),\n            categoryReducer('Child Care'),\n            categoryReducer('House'),\n            categoryReducer('Education'),\n            categoryReducer('Enterteinment'),\n            categoryReducer('Others'),\n          ],\n          backgroundColor: [\n            colorSwitcher('Main Expenses'),\n            colorSwitcher('Food'),\n            colorSwitcher('Car'),\n            colorSwitcher('Self Care'),\n            colorSwitcher('Child Care'),\n            colorSwitcher('House'),\n            colorSwitcher('Education'),\n            colorSwitcher('Enterteinment'),\n            colorSwitcher('Others'),\n          ],\n        },\n      ],\n    },\n  };\n\n  return <Pie data={data.chart} options={options} />;\n};\nexport default Chart;\n","/* eslint-disable */\n/* eslint-disable */\nimport React from 'react';\nimport ReactTable from 'react-table';\nimport PropTypes from 'prop-types';\nimport './StatsTable.css';\nimport styles from '../Stats.module.css';\n\nconst DiagramTable = props => {\n  const { items } = props;\n  // console.log(items);\n\n  const filterBy = type => items.filter(el => el.type === type);\n\n  const data = type =>\n    Object.assign(\n      [],\n      filterBy(type).map(el => ({\n        category: el.category,\n        amount: el.amount,\n      })),\n    );\n  const a = type =>\n    Object.assign(\n      [],\n      filterBy(type).map(el => ({\n        category: el.category,\n        amount: el.amount,\n      })),\n    );\n\n  const withdrawTotal = data('-')\n    .map(el => el.amount)\n    .reduce(function(result, num) {\n      return result + num;\n    }, 0);\n\n  const depositsTotal = data('+')\n    .map(el => el.amount)\n    .reduce(function(result, num) {\n      return result + num;\n    }, 0);\n\n  return (\n    <>\n      <ReactTable\n        key={data('-').length}\n        data={data('-').reverse()}\n        columns={[\n          {\n            Header: 'Category',\n            accessor: 'category',\n          },\n          {\n            Header: 'Amount',\n            accessor: 'amount',\n          },\n        ]}\n        defaultPageSize={data('-').length}\n        showPagination={false}\n        // filtered={[]}\n        // onClick={() => null}\n      />\n      <div className={styles.total}>\n        <div className={styles.containerText}>\n          <p className={styles.costs}>Costs:</p>\n          <p className={styles.income}>Income:</p>\n        </div>\n        <div className={styles.containerAmount}>\n          <p className={styles.costsTotal}>\n            {new Intl.NumberFormat('en', {\n              style: 'currency',\n              currency: 'UAH',\n            }).format(withdrawTotal)}\n          </p>\n          <p className={styles.incomeTotal}>\n            {new Intl.NumberFormat('en', {\n              style: 'currency',\n              currency: 'UAH',\n            }).format(depositsTotal)}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DiagramTable;\n\nDiagramTable.defaultProps = {\n  items: [],\n};\nDiagramTable.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      category: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","/*eslint-disable*/\nimport React, { Component } from 'react';\nimport Select from 'react-select';\n\nexport default class App extends Component {\n  state = {\n    selectedOption: { value: ' ', label: this.props.label },\n  };\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    this.props.handleSelect(selectedOption);\n  };\n\n  render() {\n    const { selectedOption } = this.state;\n    const { options } = this.props;\n\n    return (\n      <Select\n        blurInputOnSelect\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n    );\n  }\n}\n","const OptionsMonth = [\n  { value: 'Jan', label: 'january' },\n  { value: 'Feb', label: 'february' },\n  { value: 'Mar', label: 'march' },\n  { value: 'Apr', label: 'aprile' },\n  { value: 'May', label: 'may' },\n  { value: 'Jun', label: 'june' },\n  { value: 'Jul', label: 'july' },\n  { value: 'Aug', label: 'august' },\n  { value: 'Sep', label: 'september' },\n  { value: 'Oct', label: 'octouber' },\n  { value: 'Nov', label: 'november' },\n  { value: 'Dec', label: 'december' },\n];\n\nexport default OptionsMonth;\n","const OptionsYears = items => {\n  const date = items.map(el => new Date(el.date).toLocaleDateString());\n  const year = date.map(el => el);\n  const filtDate = year.filter(el => el !== 'Invalid Date');\n  const filt = filtDate.map(el => el.slice(5));\n\n  const set = Array.from(new Set(filt));\n  const options = set.map(el => {\n    const obj = {\n      value: el,\n      label: el,\n    };\n    return obj;\n  });\n\n  return options;\n};\n\nexport default OptionsYears;\n\n// export const OptionsYears = [\n//   { value: '1999', label: '1999' },\n//   { value: '2000', label: '2000' },\n//   { value: '2001', label: '2001' },\n//   { value: '2002', label: '2002' },\n//   { value: '2003', label: '2003' },\n//   { value: '2004', label: '2004' },\n//   { value: '2005', label: '2005' },\n//   { value: '2006', label: '2006' },\n//   { value: '2007', label: '2007' },\n//   { value: '2008', label: '2008' },\n//   { value: '2009', label: '2009' },\n//   { value: '2010', label: '2010' },\n//   { value: '2011', label: '2011' },\n//   { value: '2012', label: '2012' },\n//   { value: '2013', label: '2013' },\n//   { value: '2014', label: '2014' },\n//   { value: '2015', label: '2015' },\n//   { value: '2016', label: '2016' },\n//   { value: '2017', label: '2017' },\n//   { value: '2018', label: '2018' },\n//   { value: '2019', label: '2019' },\n// ];\n\n// export default OptionsYear;\n","/*eslint-disable*/\nconst filterItems = (items, year, month) => {\n  if (items.length !== 0) {\n    if (month && year) {\n      const filtred = items.filter(\n        el =>\n          new Date(el.date).toDateString().includes(month) &&\n          new Date(el.date).toDateString().includes(year),\n      );\n      return filtred;\n    }\n  }\n};\n\nexport default filterItems;\n","/*eslint-disable*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport StatsDiagram from '../components/Stats/StatsDiagram/StatsDiagram';\nimport StatsTable from '../components/Stats/StatsTable/StatsTable';\nimport StatsSelect from '../components/Stats/StatsSelect/StatsSelect';\nimport OptionsMonth from '../components/Stats/Options/OptionsMonth';\nimport OptionsYears from '../components/Stats/Options/OptionsYear';\nimport statisticsCount from '../helpers/statisticsCount';\nimport filterItems from '../helpers/filterItems';\nimport colorSwitcher from '../helpers/colorSwitcher';\nimport styles from '../components/Stats/Stats.module.css';\n\nclass Stats extends Component {\n  state = {\n    items: [],\n    balance: 0,\n    deposits: 0,\n    withdrow: 0,\n    search: {\n      month: null,\n      year: null,\n    },\n  };\n\n  componentDidMount() {\n    const transactions = this.props.transactions;\n    this.setState({\n      items: [...this.props.transactions],\n      balance: statisticsCount(transactions).balance,\n      deposits: statisticsCount(transactions).deposits,\n      withdrow: statisticsCount(transactions).withdrow,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { items, search } = this.state;\n    if (items.length !== prevState.length) {\n      this.test();\n    }\n  }\n\n  test = () => {\n    const statsTableLines = document.getElementsByClassName('rt-tr');\n    for (let item of statsTableLines) {\n      item.insertAdjacentHTML(\n        'afterbegin',\n        `<div style=\"background-color: ${colorSwitcher(\n          item.children[0].textContent,\n        )}\" class=\"two\"></div><div style=\"background-color: ${colorSwitcher(\n          item.children[0].textContent,\n        )}\" class=\"two\"></div>`,\n      );\n    }\n  };\n\n  getFilteredItems = () => {\n    const { search, items } = this.state;\n    return filterItems(items, search.year, search.month);\n  };\n\n  getSelectMonth = options => {\n    this.setState(state => ({\n      search: Object.assign(state.search, { month: options.value }),\n    }));\n  };\n\n  getSelectYears = options => {\n    this.setState(state => ({\n      search: Object.assign(state.search, { year: options.value }),\n    }));\n  };\n\n  render() {\n    const { items } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.innerTitle}>\n          <h2 className={styles.title}>Statistics</h2>\n        </div>\n        <div className={styles.flexContainer}>\n          <div className={styles.innerDiagramContainer}>\n            <div className={styles.innerDiagram}>\n              <StatsDiagram\n                items={\n                  this.getFilteredItems() !== undefined\n                    ? this.getFilteredItems()\n                    : this.state.items\n                }\n              />\n            </div>\n          </div>\n\n          <div className={styles.innerStatsContainer}>\n            <div className={styles.statsSelectContainer}>\n              <div className={styles.innerSelectMonth}>\n                <StatsSelect\n                  options={OptionsMonth}\n                  handleSelect={this.getSelectMonth}\n                  label={'Month'}\n                />\n              </div>\n              <div className={styles.innerSelectYear}>\n                <StatsSelect\n                  options={OptionsYears(items)}\n                  handleSelect={this.getSelectYears}\n                  label={'Year'}\n                />\n              </div>\n            </div>\n            <div className={styles.innerTable}>\n              <StatsTable\n                items={\n                  this.getFilteredItems() !== undefined\n                    ? this.getFilteredItems()\n                    : this.state.items\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  transactions: state.finance.data,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Stats);\n"],"sourceRoot":""}